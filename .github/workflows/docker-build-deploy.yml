name: Build and Deploy

on:
    push:
        branches: [main]
    workflow_dispatch:

jobs:
    build-and-deploy:
        runs-on: ubuntu-latest
        container:
            image: alpine:latest

        steps:
            - name: Install dependencies
              run: |
                  apk add --no-cache \
                    git \
                    docker \
                    docker-cli-buildx \
                    openssh-client \
                    curl \
                    bash

            - name: Checkout code
              uses: actions/checkout@v3

            - name: Docker context setup
              run: |
                  mkdir -p ~/.docker/cli-plugins/
                  echo '{"experimental": "enabled"}' > ~/.docker/config.json

            - name: Set repository name
              id: repo-name
              run: |
                  REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
                  REPO_NAME=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')
                  echo "REPO_OWNER=$REPO_OWNER" >> $GITHUB_ENV
                  echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV

            - name: Login to GitHub Container Registry
              uses: docker/login-action@v2
              with:
                  registry: ghcr.io
                  username: ${{ github.repository_owner }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build and push
              uses: docker/build-push-action@v4
              with:
                  context: .
                  push: true
                  tags: |
                      ghcr.io/${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}:latest
                      ghcr.io/${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}:${{ github.sha }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

            - name: Deploy to Digital Ocean
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.DO_HOST }}
                  username: ${{ secrets.DO_USERNAME }}
                  key: ${{ secrets.DO_SSH_KEY }}
                  script: |
                      # Login to GitHub Container Registry
                      echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

                      # Pull the latest image (using lowercase repository name)
                      docker pull ghcr.io/${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}:latest

                      # Stop and remove the existing container (if it exists)
                      docker stop activity-service || true
                      docker rm activity-service || true

                      # Run the new container with port 8081
                      docker run -d --name activity-service --restart unless-stopped -p 8081:8081 ghcr.io/${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}:latest

                      # Clean up unused images
                      docker image prune -f
